<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pragmatic Coding on DillonBaird.io</title>
    <link>https://dillonbaird.io/tags/pragmatic-coding/</link>
    <description>Recent content in Pragmatic Coding on DillonBaird.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Apr 2024 07:00:00 +0000</lastBuildDate><atom:link href="https://dillonbaird.io/tags/pragmatic-coding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>When Best Practices Aren&#39;t Always Best: Pragmatic Coding</title>
      <link>https://dillonbaird.io/blog/best-practices-arent-always-best/</link>
      <pubDate>Wed, 24 Apr 2024 07:00:00 +0000</pubDate>
      
      <guid>https://dillonbaird.io/blog/best-practices-arent-always-best/</guid>
      <description>I’ve encountered countless scenarios where sticking rigidly to best practices wasn’t the optimal path. These experiences have underscored the value of flexibility and its critical role in navigating complex software environments. Today, I&amp;rsquo;m eager to share insights on when to adhere to these practices and when deviating can enhance innovation and ensure project success. This guide explores how adopting a more adaptable approach can enhance team dynamics and improve project outcomes.</description>
    </item>
    
  </channel>
</rss>
